[package]
name = "website"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "websitebin"
path = "src/main.rs"

[dependencies]
axum = { version = "0.7", optional = true }
console_error_panic_hook = "0.1"
leptos = { git = "https://github.com/leptos-rs/leptos", rev = "2b04c2710d913516dfda76b7dcb8992a715f9046" }
leptos_axum = { git = "https://github.com/leptos-rs/leptos", features = [
    # "islands-router",
], optional = true, rev = "2b04c2710d913516dfda76b7dcb8992a715f9046" }
leptos_meta = { git = "https://github.com/leptos-rs/leptos", rev = "2b04c2710d913516dfda76b7dcb8992a715f9046" }
leptos_router = { git = "https://github.com/leptos-rs/leptos", rev = "2b04c2710d913516dfda76b7dcb8992a715f9046" }
tokio = { version = "1", features = [
    "rt-multi-thread",
    "macros",
], optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.93"
thiserror = "1"
tracing = { version = "0.1", optional = true }
http = "1"
markdown = "=1.0.0-alpha.20"
tokio-stream = { version = "0.1.16", optional = true, features = ["fs"] }
yaml-rust2 = { version = "0.8" }
anyhow = { version = "1" }
serde = { version = "1", features = ["derive"] }
futures = "0.3"
uuid = { version = "1", features = ["v4"], optional = true }
image = { version = "0.25", optional = true }

cfg-if = "1.0.0"

[features]
csr = ["leptos/csr"]
hydrate = ["leptos/hydrate", "leptos/experimental-islands"]
ssr = [
    # "dep:axum",
    "dep:tokio",
    # "dep:tower",
    # "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos/experimental-islands",
    "dep:tracing",
    "dep:tokio-stream",
    "dep:uuid",
    "dep:image",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"


[profile.dev]
opt-level = 0

[profile.bindev]
inherits = "dev"

[package.metadata.leptos]

bin-target = "websitebin"
bin-exe-name = "websitebin"

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "website"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"


# bin-profile-release = "binrelease"
bin-profile-dev = "bindev"


# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# The tailwind config file.
#
# Optional, defaults to "tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "tailwind.config.js"
